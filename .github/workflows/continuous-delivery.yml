name: Continuous Delivery

on:
  push:
    branches:
      - main
    paths-ignore:
      # - '.github/**'
      - '**/README.md'
env:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Bump version and create tag
        id: semanticversion
        uses: hennejg/github-tag-action@v4.2.4
        with:
          release_branches: main
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify and print new build number
        run: |
          if echo '${{ steps.semanticversion.outputs.new_tag }}' |grep -Eq '^v[0-9]+[.][0-9]+[.][0-9]+$'; then 
            echo Tag '${{ steps.semanticversion.outputs.new_tag }}', New version '${{ steps.semanticversion.outputs.new_version }}', Changelog '${{ steps.semanticversion.outputs.changelog }}'
          else
            echo 'unexpected tag format - aborting'
            exit -1
          fi

      ## Configure JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      ## Build with maven
      - name: Prepare maven settings
        env:
          REPO_URL: ${{ secrets.LEVIGO_NEXUS_REPO_RELEASES }}
          REGISTRY_URL: ${{ secrets.LEVIGO_NEXUS_REGISTRY_RELEASES }}
          REPOSITORY_USERID: ${{ secrets.LEVIGO_NEXUS_USERNAME }}
          REPOSITORY_CREDENTIALS: ${{ secrets.LEVIGO_NEXUS_PASSWORD }}
        run: |
          mkdir -p ~/.m2
          envsubst < ./.github/settings.xml > ~/.m2/settings.xml

      - name: Set version
        id: version
        run: |
          echo Releasing as ${{ steps.semanticversion.outputs.new_version }}
          mvn $MAVEN_CLI_OPTS versions:set -DnewVersion=${{ steps.semanticversion.outputs.new_version }}

      - name: Perform build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: mvn $MAVEN_CLI_OPTS package -DskipTests

      ## Deploy
      - name: Deploy package
        run: |
          mvn $MAVEN_CLI_OPTS package -Dmaven.test.failure.ignore=true

      ## Notify Slack
      - name: Notify slack
        uses: hennejg/slack-build-notifier@v1.1
        with:
          username: GitHub
          icon_emoji: octocat
          text: Released new version `${{ steps.semanticversion.outputs.new_version }}` of *${{ github.repository }}* to maven central
          channel: ci_js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}